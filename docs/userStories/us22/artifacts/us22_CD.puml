@startuml
!pragma layout smetana

package domain.Sensor {

    interface SensorFactory {
        + createSensor(deviceID : DeviceID, modelPath : ModelPath, sensorTypeID : SensorTypeID, sensorName : SensorName): Sensor
    }
    class SensorFactoryImpl {
        + createSensor(Object... parameters): Sensor
    }

      interface Sensor {
            + getID(): SensorID
            + getName(): SensorName
            + getModelPath(): ModelPath
            + getSensorTypeID(): SensorTypeID
            + getDeviceID(): DeviceID
            + getValue(): ValueObject
            + toString(): String
        }
 }

 package domain.Sensor.DewPointSensor {


    class domain.Sensor.DewPointSensor.DewPointSensor <<entity>> <<Root>> {
        - _modelPath : ModelPath
        - _sensorName : SensorName
        - _sensorID : SensorID
        - _sensorTypeID : SensorTypeID
        - _dewPointValue : DewPointValue
        - _deviceID : DeviceID

        + DewPointSensor(deviceID : DeviceID, modelPath : ModelPath, sensorTypeID : SensorTypeID, sensorName : SensorName)
        + getID () : SensorID
        + getName () : SensorName
        + getModelPath () : ModelPath
        + getSensorTypeID () : SensorTypeID
        + getValue () : ValueObject
        + getDeviceID () : DeviceID
    }

    class SensorName <<ValueObject>> {
            - _name: String
            + SensorName(name : String)
            + getName() : String
    }

     class SensorID <<DomainID>>{
                - _id: String
                + SensorID(sensorID : String)
                + getID() : String
     }


  class DewPointValue <<ValueObject>> {
    - _DewPointValue : int
    + DewPointValue(dewPointValue : int)
    + toString() : String
  }

    class SensorTypeID <<DomainID>> {
        - _id : String
        + SensorTypeID(sensorTypeID : String)
        + getID() : String
    }



    class ModelPath <<DomainID>>{
        - _path: String
        + ModelPath(Object... parameters)
        + getID() : String
    }



    class DeviceID <<DomainID>>{
        - _id: String
        + DeviceID(id : String)
        + getID() : String
    }

  }


package domain.ddd {

  interface DomainEntity {
  }

  interface DomainID {
  }

  interface AggregateRoot {
  }
  interface ValueObject {
  }
}

SensorFactoryImpl ..|> SensorFactory
SensorFactoryImpl "1" ..> "1" domain.Sensor.DewPointSensor.DewPointSensor : creates

domain.Sensor.DewPointSensor.DewPointSensor ..|> domain.Sensor.Sensor
domain.Sensor.DewPointSensor.DewPointSensor "1" --> "1" domain.Sensor.DewPointSensor.DewPointValue : has
domain.Sensor.DewPointSensor.DewPointSensor "1" -->  "1" SensorTypeID : has
domain.Sensor.DewPointSensor.DewPointSensor "1" -->  "1" SensorID : has
domain.Sensor.DewPointSensor.DewPointSensor "1" -->  "1" DeviceID : has
domain.Sensor.DewPointSensor.DewPointSensor "1" -->  "1" ModelPath : has
domain.Sensor.DewPointSensor.DewPointSensor "1" -->  "1" SensorName : has

domain.Sensor.DewPointSensor.DewPointValue ..|> domain.ddd.ValueObject
SensorName ..|> domain.ddd.ValueObject

DomainEntity --|> DomainID
AggregateRoot --|> DomainEntity

domain.Sensor.Sensor --|> domain.ddd.AggregateRoot

SensorTypeID ..|> domain.ddd.DomainID
SensorID ..|> domain.ddd.DomainID
ModelPath ..|> domain.ddd.DomainID
DeviceID ..|> domain.ddd.DomainID
domain.ddd.DomainID --|> domain.ddd.ValueObject

@enduml